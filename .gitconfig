[user]
	name = Jackie Liu
	email = jinke.liu@autodesk.com
[alias]
	s = status
 	ci = commit -a
 	co = checkout
 	b = branch
	st = stash --include-untracked
	sf = stash save --patch
  cp = cherry-pick
  fixup = "!f(){ git add .; git commit --fixup $1; }; f"
  amend = "!f(){ git add .; git commit --amend --quiet; }; f"
	new = !sh -c 'git log $1@{1}..$1@{0} "$@"'
	undo = reset --hard
    	unstage = reset HEAD --
    	last = log -1 HEAD
	lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%ci) %C(bold blue)<%an>%Creset' --abbrev-commit
	remove = !git ls-files --deleted -z | xargs -0 git rm
	p = pull --rebase
	whois = "!sh -c 'git log -i -1 --pretty=\"format:%an <%ae>\n\" --author=\"$1\"' -"
        whatis = show -s --pretty='tformat:%h (%s, %ad)' --date=short	
	lc = log ORIG_HEAD.. --stat --no-merges
	graphviz = "!f() { echo 'digraph git {' ; git log --pretty='format:  %h -> { %p }' \"$@\" | sed 's/[0-9a-f][0-9a-f]*/\"&\"/g' ; echo '}'; }; f"
	ribbon = tag --force _ribbon origin/master
    	catchup = log --patch --reverse --topo-order _ribbon..origin/master
	changed = show --pretty=\"format:\" --name-only
	sshow = "!f() { git stash show stash^{/$*} -p; }; f"
  sapply = "!f() { git stash apply stash^{/$*}; }; f"
	graphviz = "!f() { echo 'digraph git {' ; git log --pretty='format:  %h -> { %p }' \"$@\" | sed 's/[0-9a-f][0-9a-f]*/\"&\"/g' ; echo '}'; }; f"
  edit-unmerged = "!f() { git diff --name-status --diff-filter=U | cut -f2 ; }; vim `f`"
  add-unmerged = "!f() { git diff --name-status --diff-filter=U | cut -f2 ; }; git add `f`"
  nuke = !sh -c 'git push origin :$1' -
  ff = flow feature
  start = "!f(){ if [[ -n $1 ]]; then git flow feature start \"jl_$1\"; else echo 'Missed branch name'; exit 1; fi }; f"
  publish = "!f(){ CURRENT=$(git rev-parse --abbrev-ref HEAD); git push -u origin $CURRENT ;}; f"
  fixed = bisect bad
  unfixed = bisect good
  current = rev-parse --abbrev-ref HEAD
[push]
	default = upstream
[receive]
	denyNonFastForwards = true
[filter "media"]
	clean = git-media-clean %f
	smudge = git-media-smudge %f
[core]
    packedGitLimit = 128m
    packedGitWindowSize = 128m
[pack]
    deltaCacheSize = 128m
    packSizeLimit = 128m
    windowMemory = 128m
[core]
	excludesfile = /Users/liujin/.gitignore_global
	editor = /usr/bin/vim
[difftool "sourcetree"]
	cmd = opendiff \"$LOCAL\" \"$REMOTE\"
	path = 
[mergetool "sourcetree"]
	cmd = /Applications/SourceTree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
	trustExitCode = true
[merge]
	ff = only
	tool = opendiff
[filter "lfs"]
	clean = git-lfs clean %f
	smudge = git-lfs smudge %f
	required = true
[credential]
	helper = osxkeychain
[rebase]
	autosquash = true
[color]
	ui = auto
